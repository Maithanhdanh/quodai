{"version":3,"sources":["config/vars.js","context/StateProvider.js","hooks/useOutSideClick.js","components/Header/Header.js","config/fetchData.js","config/urlBase.js","helpers/issues.js","containers/Body/Body.js","App.js","context/reducer.js","reportWebVitals.js","index.js"],"names":["process","REACT_ENV","require","config","FETCH_CONFIG","DEFAULT_CURRENT_PAGE","parseInt","PER_PAGE","NAVIGATION_DOMAIN","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","useOutsideClick","ref","callback","handleClick","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","Header","highlightedIssues","useState","length","notiCount","setNotiCount","isShowNoti","setIsShowNoti","isShowNotiCount","setIsShowNotiCount","showAnimation","setShowAnimation","useRef","useOnClickOutside","handleClickOutside","setTimeout","className","onClick","map","issue","id","title","fetchData","a","method","url","fetch","mode","response","json","console","log","alert","statusCode","message","ROUTE_MAP","ISSUES","PATH","METHOD","callAPIGetListIssues","page","per_page","query","queryString","stringify","listIssues","Body","dispatch","issues","setIssues","pageChange","setPageChange","highlightedItem","setHighlightedItem","currentPage","setCurrentPage","getListIssues","err","type","handleClickIssue","style","color","state","disabled","onSubmit","preventDefault","name","onChange","App","action","Set","slice","newNotiCount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e41359a9.chunk.js","sourcesContent":["// <!-- Load env variable in non-production env -->\r\nif (process.env.REACT_ENV !== \"production\") {\r\n\trequire(\"dotenv\").config()\r\n}\r\n\r\n// <!-- Default variable for API paginated issues -->\r\nexport const FETCH_CONFIG = {\r\n\tDEFAULT_CURRENT_PAGE: parseInt(process.env.REACT_APP_DEFAULT_CURRENT_PAGE),\r\n\tPER_PAGE: parseInt(process.env.REACT_APP_PER_PAGE),\r\n}\r\n\r\n// <!-- Navigate domain -->\r\nexport const NAVIGATION_DOMAIN = {\r\n\tDOMAIN: process.env.REACT_APP_API_URL_DOMAIN,\r\n}\r\n\r\n// <!-- Number of issues shown on clicked panel -->\r\nexport const NUM_HIGHLIGHTED_ISSUES_SHOW = process.env.REACT_APP_NUM_HIGHLIGHTED_ISSUES_SHOW\r\n","import React, { createContext, useContext, useReducer } from \"react\"\n\n//prepares the data layer\nexport const StateContext = createContext()\n\n// provide the data layer\nexport const StateProvider = ({ reducer, initialState, children }) => (\n\t<StateContext.Provider value={useReducer(reducer, initialState)}>\n\t\t{children}\n\t</StateContext.Provider>\n)\n\n//pull information from the data layer\nexport const useStateValue = () => useContext(StateContext)\n","import { useEffect } from \"react\"\r\n\r\nconst useOutsideClick = (ref, callback) => {\r\n\tconst handleClick = (e) => {\r\n\t\tif (ref.current && !ref.current.contains(e.target)) {\r\n\t\t\tcallback()\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.addEventListener(\"click\", handleClick)\r\n\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener(\"click\", handleClick)\r\n\t\t}\r\n\t})\r\n}\r\n\r\nexport default useOutsideClick\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\nimport { NUM_HIGHLIGHTED_ISSUES_SHOW } from \"../../config/vars\"\r\nimport { useStateValue } from \"../../context/StateProvider\"\r\nimport useOnClickOutside from \"../../hooks/useOutSideClick\"\r\nimport \"../../style/css/Header.css\"\r\n\r\nfunction Header() {\r\n\tconst [{ highlightedIssues }, dispatch] = useStateValue()\r\n\tconst [notiCount, setNotiCount] = useState(highlightedIssues?.length || 0)\r\n\r\n\tconst [isShowNoti, setIsShowNoti] = useState(false)\r\n\tconst [isShowNotiCount, setIsShowNotiCount] = useState(false)\r\n\r\n\tconst [showAnimation, setShowAnimation] = useState(false)\r\n\r\n\tconst ref = useRef()\r\n\tuseOnClickOutside(ref, () => handleClickOutside())\r\n\r\n\t// <!-- Toggle counting animation -->\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetShowAnimation(false)\r\n\t\t}, 500)\r\n\t\tsetShowAnimation(true)\r\n\t}, [highlightedIssues])\r\n\r\n\t// <!-- Count highlighted issues -->\r\n\tuseEffect(() => {\r\n\t\tif (highlightedIssues.length === 0) return null\r\n\r\n\t\tsetIsShowNotiCount(true)\r\n\t\tif (notiCount + 1 > NUM_HIGHLIGHTED_ISSUES_SHOW)\r\n\t\t\treturn setNotiCount(NUM_HIGHLIGHTED_ISSUES_SHOW)\r\n\r\n\t\tsetNotiCount(notiCount + 1)\r\n\t}, [highlightedIssues])\r\n\r\n\t// <!-- Handle onClick icon -->\r\n\tconst handleOnClickNoti = () => {\r\n\t\tsetIsShowNoti(!isShowNoti)\r\n\t\tsetIsShowNotiCount(false)\r\n\t\tsetNotiCount(0)\r\n\t}\r\n\r\n\t// <!-- Handle onClick outside -->\r\n\tconst handleClickOutside = () => {\r\n\t\tsetIsShowNoti(!isShowNoti)\r\n\t\tsetIsShowNotiCount(false)\r\n\t\tsetNotiCount(0)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n\t\t\t<div className=\"header__notification\">\r\n\t\t\t\t<i className=\"far fa-bell\" onClick={() => handleOnClickNoti()}>\r\n\t\t\t\t\t{isShowNotiCount && (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={`header__notification__count ${\r\n\t\t\t\t\t\t\t\tshowAnimation && \"noti\"\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{notiCount}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</i>\r\n\t\t\t\t{isShowNoti && (\r\n\t\t\t\t\t<div className=\"header__notification__list\" ref={ref}>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{highlightedIssues?.map((issue) => (\r\n\t\t\t\t\t\t\t\t<li key={issue.id}>\r\n\t\t\t\t\t\t\t\t\t[#{issue.id}] - {issue.title}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n","/**\n * @param {String} method \n * @param {String} url \n * \n * @return {Array} response.json()\n */\nexport default async function fetchData(method = \"GET\", url = \"\" ) {\n\ttry {\n\t\tconst response = await fetch(url, {\n\t\t\tmethod: method,\n\t\t\tmode: \"cors\",\n\t\t})\n\n\t\treturn response.json()\n\t} catch (err) {\n\t\tconsole.log(err)\n\t\talert(`[${err.statusCode}] ${err.response.message}`)\n\t\treturn null\n\t}\n}\n","// <!-- Route map for API -->\nconst ROUTE_MAP = {\n\tISSUES: { PATH: \"/repos/rails/rails/issues\", METHOD: \"GET\" },\n}\nexport default ROUTE_MAP\n","import queryString from \"query-string\"\nimport fetchData from \"../config/fetchData\"\nimport ROUTE_MAP from \"../config/urlBase\"\nimport { FETCH_CONFIG, NAVIGATION_DOMAIN } from \"../config/vars\"\n\n/**\n * structure fetch request \n * @param {String} page ( default: reference to FETCH_CONFIG in config/vars )\n * @param {String} per_page ( default: reference to FETCH_CONFIG in config/vars )\n *\n * @return {Array} listIssues\n */\nconst callAPIGetListIssues = async (\n\tpage = FETCH_CONFIG.DEFAULT_CURRENT_PAGE,\n\tper_page = FETCH_CONFIG.PER_PAGE\n) => {\n\tconst query = queryString.stringify({ page, per_page })\n\n\tconst listIssues = await fetchData(\n\t\tROUTE_MAP.ISSUES.METHOD,\n\t\tNAVIGATION_DOMAIN.DOMAIN + ROUTE_MAP.ISSUES.PATH + \"?\" + query\n\t)\n\n\treturn listIssues\n}\nexport default callAPIGetListIssues\n","import React, { useEffect, useState } from \"react\"\r\nimport { FETCH_CONFIG } from \"../../config/vars\"\r\nimport { useStateValue } from \"../../context/StateProvider\"\r\nimport callAPIGetListIssues from \"../../helpers/issues\"\r\nimport \"../../style/css/Body.css\"\r\n\r\nfunction Body() {\r\n\tconst [{}, dispatch] = useStateValue()\r\n\tconst [issues, setIssues] = useState([])\r\n\tconst [pageChange, setPageChange] = useState(\r\n\t\tFETCH_CONFIG.DEFAULT_CURRENT_PAGE\r\n\t)\r\n\tconst [highlightedItem, setHighlightedItem] = useState(null)\r\n\tconst [currentPage, setCurrentPage] = useState(\r\n\t\tFETCH_CONFIG.DEFAULT_CURRENT_PAGE\r\n\t)\r\n\r\n\t// <!-- Get list issues based on current page -->\r\n\tuseEffect(() => {\r\n\t\ttry {\r\n\t\t\tconst getListIssues = async () => {\r\n\t\t\t\tconst listIssues = await callAPIGetListIssues(currentPage)\r\n\t\t\t\tsetIssues(listIssues)\r\n\t\t\t}\r\n\t\t\tgetListIssues()\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t}, [currentPage])\r\n\r\n\t// <!-- Reset highlighted item -->\r\n\tuseEffect(() => {\r\n\t\tsetHighlightedItem(null)\r\n\t}, [issues])\r\n\r\n\t// <!-- Next page -->\r\n\tconst nextPage = () => {\r\n\t\tsetCurrentPage(currentPage + 1)\r\n\t\tsetPageChange(currentPage + 1)\r\n\t}\r\n\r\n\t// <!-- Previous page -->\r\n\tconst prevPage = () => {\r\n\t\tif (currentPage - 1 < 1) {\r\n\t\t\tsetCurrentPage(1)\r\n\t\t\tsetPageChange(1)\r\n\t\t} else {\r\n\t\t\tsetCurrentPage(currentPage - 1)\r\n\t\t\tsetPageChange(currentPage - 1)\r\n\t\t}\r\n\t}\r\n\r\n\t// <!-- Input page to get list issues -->\r\n\tconst submitPage = (e) => {\r\n\t\te.preventDefault()\r\n\t\tif (pageChange <= 0) return alert(\"Page must be greater than 0\")\r\n\t\tsetCurrentPage(pageChange)\r\n\t}\r\n\tconst handlePageChange = (e) => {\r\n\t\tif (!e.target.value) return setPageChange(\"\")\r\n\t\tsetPageChange(parseInt(e.target.value))\r\n\t}\r\n\r\n\t// <!-- Toggle highlighted item -->\r\n\tconst handleClickIssue = (issue) => {\r\n\t\tif (highlightedItem === issue.id) {\r\n\t\t\tsetHighlightedItem(null)\r\n\t\t} else {\r\n\t\t\tsetHighlightedItem(issue.id)\r\n\t\t}\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: \"SET_HIGHLIGHTED_ISSUES\",\r\n\t\t\thighlightedIssues: issue,\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"body\">\r\n\t\t\t<div className=\"issues-list\">\r\n\t\t\t\t<div className=\"issues-list__header\">\r\n\t\t\t\t\t<h2>Issues list</h2>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"issues-list__body\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{issues?.map((issue) => (\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\tclassName={`${issue.id} ${\r\n\t\t\t\t\t\t\t\t\thighlightedItem === issue.id && \"highlighted\"\r\n\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\tkey={issue.id}\r\n\t\t\t\t\t\t\t\tonClick={() => handleClickIssue(issue)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div className=\"issues-list__body__title\">\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-exclamation\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: issue.state === \"open\" ? \"#499b5d\" : \"red\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\t<h3>{issue.title}</h3>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"issues-list__body__detail\">#{issue.id}</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"issues-page\">\r\n\t\t\t\t<div className=\"issues-page__control\">\r\n\t\t\t\t\t<button disabled={currentPage === 1} onClick={() => prevPage()}>\r\n\t\t\t\t\t\t<i className=\"fa fa-angle-double-left\"></i> Previous\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<form onSubmit={submitPage}>\r\n\t\t\t\t\t\t<input name=\"page\" value={pageChange} onChange={handlePageChange} />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<button onClick={() => nextPage()}>\r\n\t\t\t\t\t\tNext <i className=\"fa fa-angle-double-right\"></i>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Body\r\n","import React from \"react\"\r\nimport Header from \"./components/Header/Header\"\r\nimport Body from \"./containers/Body/Body\"\r\nimport \"./style/css/App.css\"\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Header />\r\n\t\t\t<Body />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import { NUM_HIGHLIGHTED_ISSUES_SHOW } from \"../config/vars\"\r\nexport const initialState = {\r\n\thighlightedIssues: [],\r\n\tnewNotiCount: 0,\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"SET_HIGHLIGHTED_ISSUES\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\thighlightedIssues: [\r\n\t\t\t\t\t...new Set([action.highlightedIssues, ...state.highlightedIssues]),\r\n\t\t\t\t].slice(0, NUM_HIGHLIGHTED_ISSUES_SHOW),\r\n\t\t\t}\r\n\r\n\t\tcase \"RESET_HIGHLIGHTED_ISSUES\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnewNotiCount: 0,\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport default reducer\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport reducer, { initialState } from \"./context/reducer\"\nimport { StateProvider } from \"./context/StateProvider\"\nimport \"./index.css\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<StateProvider initialState={initialState} reducer={reducer}>\n\t\t\t<App />\n\t\t</StateProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}